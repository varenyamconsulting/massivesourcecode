<?php
/**
 * @file tm_users_external_signin.install
 * Implementation of login with twitter.
 * This is heavily based on the twitter_signin module (http://drupal.org/project/twitter)
 * 
 * @author Daniel da Silva (daniel.silva@flipside.org)
 */

 /**
 * Implements hook_requirements()
  * Directly from the twitter module.
 */
function tm_users_external_signin_requirements($phase) {
  global $base_path;
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    // Verify that the Twitter Application keys are set.
    global $conf;
    $requirements['tm_twitter_keys'] = array('title' => $t('Twitter Application keys'));
    $consumer_key = $conf['tm_twitter_consumer_key'];
    $consumer_secret = $conf['tm_twitter_consumer_secret'];
    if (empty($consumer_key) || empty($consumer_secret)) {
      $requirements['tm_twitter_keys']['value'] = $t('Missing');
      $requirements['tm_twitter_keys']['description'] =
        $t('In order to interact with Twitter, you need to create an application at ' .
           '<a href="http://dev.twitter.com" target="_blank">http://dev.twitter.com</a> ' .
           'and set the generated Application keys at the ' .
           '<a href="' . $base_path . 'admin/config/services/tm_twitter">Twitter settings page</a>');
      $requirements['tm_twitter_keys']['severity'] = REQUIREMENT_ERROR;
    }
    else {
      $requirements['tm_twitter_keys']['value'] = $t('Configured');
      $requirements['tm_twitter_keys']['severity'] = REQUIREMENT_OK;
    }
  }
  return $requirements;
}
 
/**
 * Implements hook_schema().
 */
function tm_users_external_signin_schema() {
  $schema['tm_twitter_account'] = array(
    'description' => "Stores information on specific Twitter user accounts.",
    'fields' => array(
      'twitter_uid' => array(
        'description' => "The unique identifier of the {tm_twitter_account}.",
        'type' => 'numeric',
        'unsigned' => TRUE,
        'precision' => 20,
        'scale' => 0,
        'not null' => TRUE,
        'default' => 0,
      ),
      'screen_name' => array(
        'description' => "The unique login name of the {tm_twitter_account} user.",
        'type' => 'varchar',
        'length' => 255,
      ),
      'oauth_token' => array(
        'description' => 'The token_key for oauth-based access.',
        'type' => 'varchar',
        'length' => 64,
      ),
      'oauth_token_secret' => array(
        'description' => 'The token_secret for oauth-based access.',
        'type' => 'varchar',
        'length' => 64,
      ),
      'name' => array(
        'description' => "The full name of the {tm_twitter_account} user.",
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => "The description/biography associated with the {tm_twitter_account}.",
        'type' => 'varchar',
        'length' => 255,
      ),
      'location' => array(
        'description' => "The location of the {tm_twitter_account}'s owner.",
        'type' => 'varchar',
        'length' => 255,
      ),
      'uid' => array(
        'description' => "The uid of the user who added this Twitter account.",
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array('screen_name' => array('screen_name'), 'uid' => array('uid')),
    'primary key' => array('twitter_uid'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function twitter_uninstall() {
  // Remove variables
  variable_del('tm_twitter_import');
  variable_del('tm_twitter_expire');
  variable_del('tm_twitter_consumer_key');
  variable_del('tm_twitter_consumer_secret');
  variable_del('tm_twitter_host');
  variable_del('tm_users_external_signin_button');
  variable_del('tm_users_external_signin_register');
  variable_del('tm_twitter_host');
  variable_del('tm_twitter_api');
  variable_del('tm_twitter_search');
  variable_del('tm_twitter_tinyurl');
}