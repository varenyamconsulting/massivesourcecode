<?php

/**
 * @file
 * Allows user account cancellation to happen via password confirmation.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function user_cancel_password_confirm_form_user_cancel_confirm_form_alter(&$form, &$form_state) {
  // Replace the standard user cancellation submit handler with our own. If we
  // can't find it, then some other module has already taken over the account
  // cancellation process, so don't do anything in that case.
  $key = array_search('user_cancel_confirm_form_submit', $form['#submit']);
  if ($key !== FALSE) {
    $form['#submit'][$key] = 'user_cancel_password_confirm_submit';
    // Add the current password field and a validation handler to check it.
    $form['current_pass'] = array(
      '#type' => 'password',
      '#title' => t('Current password'),
      '#required' => TRUE,
      '#size' => 25,
      '#description' => t('Enter your current password to cancel the account.'),
      '#weight' => 5,
      '#attributes' => array('autocomplete' => 'off'),
      '#element_validate' => array('user_cancel_password_confirm_validate'),
    );

    // Don't give administrators a choice to confirm via e-mail; we will
    // confirm via password always.
    $form['user_cancel_confirm']['#access'] = FALSE;
    $form['user_cancel_confirm']['#default_value'] = FALSE;
  }
}

/**
 * Validation for the current password field on the user cancellation form.
 */
function user_cancel_password_confirm_validate($element, &$form_state, $complete_form) {
  // Check the current user's password (not the account being deleted). This
  // allows administrators to delete other users' accounts without having to
  // know the user's password.
  require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
  if (!user_check_password($form_state['values']['current_pass'], $GLOBALS['user'])) {
    form_error($element, t('Your current password is incorrect.'));
  }
}

/**
 * Replacement submit handler for the user cancellation form.
 */
function user_cancel_password_confirm_submit($form, &$form_state) {
  global $user;

  // Cancel the account directly and redirect to the front page.
  $account = $form_state['values']['_account'];
  user_cancel($form_state['values'], $account->uid, $form_state['values']['user_cancel_method']);
  $form_state['redirect'] = '<front>';

  // Display a message to users who are cancelling their own accounts
  // (administrators cancelling another user's account will already get a
  // standard message).
  $cancel_own_account = $account->uid == $user->uid;
  if ($cancel_own_account) {
    drupal_set_message(t('Your account has been canceled.'));
  }
}
